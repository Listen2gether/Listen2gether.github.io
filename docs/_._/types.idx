listenBrainzService	_._/types.html#listenBrainzService	Service.listenBrainzService	
lastFmService	_._/types.html#lastFmService	Service.lastFmService	
Service	_._/types.html#Service	types: Service	
ServiceUser	_._/types.html#ServiceUser	types: ServiceUser	
User	_._/types.html#User	types: User	
Listen	_._/types.html#Listen	types: Listen	
newServiceUser	_._/types.html#newServiceUser,Service,cstring,cstring,cstring	types: newServiceUser(service: Service; username, token, sessionKey: cstring = &quot;&quot;): ServiceUser	
newUser	_._/types.html#newUser,cstring,array[Service,ServiceUser],Option[Listen],seq[Listen],int	types: newUser(userId: cstring = $toUnix(getTime()); services: array[Service,\n    ServiceUser] = [listenBrainzService: newServiceUser(listenBrainzService),\n                    lastFmService: newServiceUser(lastFmService)];\n        playingNow: Option[Listen] = none(Listen);\n        listenHistory: seq[Listen] = @[]; lastUpdateTs: int = 0): User	
newListen	_._/types.html#newListen,cstring,cstring,Option[cstring],Option[cstring],Option[cstring],Option[seq[cstring]],Option[int],Option[int],Option[bool],Option[bool]	types: newListen(trackName, artistName: cstring; releaseName, recordingMbid,\n    releaseMbid: Option[cstring] = none(cstring);\n          artistMbids: Option[seq[cstring]] = none(seq[cstring]);\n          trackNumber: Option[int] = none(int);\n          listenedAt: Option[int] = none(int);\n          mirrored, preMirror: Option[bool] = none(bool)): Listen	
